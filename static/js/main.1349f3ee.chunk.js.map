{"version":3,"sources":["components/topbar/style.js","components/topbar/index.js","components/leftbar/style.js","components/leftbar/index.js","components/rightbar/style.js","components/chatting/style.js","components/chatting/index.js","components/login/style.js","components/login/index.js","components/rightbar/index.js","components/footer/style.js","components/footer/index.js","Home.js","About.js","App.js","serviceWorker.js","index.js"],"names":["TopbarBlock","styled","div","TopbarMiddle","TopbarLeft","TopbarRight","index","title","SideBarBlock","SideBarItem","SideLink","Link","memo","contentList","map","item","to","key","props","height","ChatBlock","ChatMessageBlock","ChatMessageInput","input","ChatMessageButton","button","placeholder","LoginBlock","LoginInput","LoginButton","style","marginTop","width","display","FooterBlock","background","About","useState","column","setColumn","_onReSizeEvent","document","body","offsetWidth","useEffect","window","addEventListener","removeEventListener","position","top","path","component","Home","exact","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oxBAGO,IAAMA,EAAcC,IAAOC,IAAV,KAWXC,EAAeF,IAAOC,IAAV,KAIZE,EAAaH,IAAOC,IAAV,KAIVG,EAAcJ,IAAOC,IAAV,KCTTI,EAVD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,UACA,kBAAC,EAAD,KAAsBA,GACtB,kBAAC,EAAD,Y,kfCJC,IAAMC,EAAeP,IAAOC,IAAV,KAQZO,EAAcR,IAAOC,IAAV,KAQXQ,EAAWT,YAAOU,IAAPV,CAAH,KCJNW,kBAZD,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACf,OACE,kBAAC,EAAD,KACGA,EAAYC,KAAI,SAAAC,GAAI,OACnB,kBAAC,EAAD,CAAiBC,GAAE,WAAe,SAATD,EAAkB,GAAKA,IAC9C,kBAAC,EAAD,CAAoBE,IAAKF,GAAOA,W,gcCLnC,IAAMP,EAAeP,IAAOC,IAAV,KAMZO,EAAcR,IAAOC,IAAV,KAIZ,SAAAgB,GAAK,OAAIA,EAAMC,UAKHlB,YAAOU,IAAPV,CAAH,K,oiCChBd,IAAMmB,EAAYnB,IAAOC,IAAV,KAWTmB,EAAmBpB,IAAOC,IAAV,KAUhBoB,EAAmBrB,IAAOsB,MAAV,KAahBC,EAAoBvB,IAAOwB,OAAV,KCxBfnB,EAVD,WACZ,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,cACA,kBAAC,EAAD,CAAyBoB,YAAY,uDACrC,kBAAC,EAAD,6B,wyBCLC,IAAMC,EAAa1B,IAAOC,IAAV,KAWV0B,EAAa3B,IAAOsB,MAAV,KAWVM,EAAc5B,IAAOwB,OAAV,KCTTnB,EAbD,WACZ,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKwB,MAAO,CAAEC,UAAW,MAAOC,MAAO,OAAQC,QAAS,SACtD,kBAAC,EAAD,iCACA,kBAAC,EAAD,8BCSOrB,kBAbD,SAAC,GAAoB,EAAlBC,YACf,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAoBM,OAAO,OACzB,kBAAC,EAAD,OAEF,kBAAC,EAAD,CAAoBA,OAAO,OACzB,kBAAC,EAAD,W,+KCVD,IAAMe,EAAcjC,IAAOC,IAAV,KCQTI,EARD,WACZ,OACE,kBAAC,EAAD,4BACwB,gDADxB,yBCOWM,kBAVF,WACX,OACE,yBAAKkB,MAAO,CAAEE,MAAO,OAAQb,OAAQ,SACnC,yBAAKW,MAAO,CAAEX,OAAQ,MAAOgB,WAAY,SAAzC,KACA,yBAAKL,MAAO,CAAEX,OAAQ,MAAOgB,WAAY,UAAzC,KACA,yBAAKL,MAAO,CAAEX,OAAQ,MAAOgB,WAAY,QAAzC,SCDSC,GAJD,WACZ,OAAO,yBAAKN,MAAO,CAAEE,MAAO,SAArB,UCgDMpB,uBA1Cf,WAAgB,IAAD,EACeyB,oBAAS,GADxB,mBACNC,EADM,KACEC,EADF,KAEPC,EAAiB,WACjBC,SAASC,KAAKC,YAAc,KAAOF,SAASC,KAAKC,YAAc,IACjEJ,GAAU,GACDE,SAASC,KAAKC,aAAe,IACtCJ,GAAU,GAEVA,GAAU,IAUd,OANAK,qBAAU,WAER,OADAC,OAAOC,iBAAiB,SAAUN,GAC3B,WACLK,OAAOE,oBAAoB,SAAUP,MAEtC,IAED,oCACE,kBAAC,EAAD,CAAQjC,MAAO,SACf,yBACEuB,MAAO,CACLkB,SAAU,QACVC,IAAK,OACLhB,QAAS,OACTd,OAAQ,MACRa,MAAO,SAGT,kBAAC,EAAD,CAAanB,YAAa,CAAC,OAAQ,WACnC,yBAAKiB,MAAO,CAAEE,MAAO,SACnB,kBAAC,IAAD,CAAOkB,KAAK,IAAIC,UAAWC,EAAMC,OAAK,EAACpC,IAAI,SAC3C,kBAAC,IAAD,CAAOiC,KAAK,SAASC,UAAWf,GAAOnB,IAAI,YAE3CqB,GAAU,kBAAC,EAAD,OAEd,kBAAC,EAAD,UClCcgB,QACW,cAA7BT,OAAOU,SAASC,UAEe,UAA7BX,OAAOU,SAASC,UAEhBX,OAAOU,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAEFlB,SAASmB,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1349f3ee.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const TopbarBlock = styled.div`\r\n  width: 100%;\r\n  position: fixed;\r\n  display: flex;\r\n  background: #862e9c;\r\n  text-align: center;\r\n  line-height: 80px;\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const TopbarMiddle = styled.div`\r\n  width: 60%;\r\n  color: #f8f0fc;\r\n`;\r\nexport const TopbarLeft = styled.div`\r\n  width: 20%;\r\n  color: #f8f0fc;\r\n`;\r\nexport const TopbarRight = styled.div`\r\n  width: 20%;\r\n  color: #f8f0fc;\r\n`;\r\n","import React from \"react\";\r\nimport * as Styles from \"./style\";\r\n\r\nconst index = ({ title }) => {\r\n  return (\r\n    <Styles.TopbarBlock>\r\n      <Styles.TopbarLeft>V</Styles.TopbarLeft>\r\n      <Styles.TopbarMiddle>{title}</Styles.TopbarMiddle>\r\n      <Styles.TopbarRight>V</Styles.TopbarRight>\r\n    </Styles.TopbarBlock>\r\n  );\r\n};\r\n\r\nexport default index;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const SideBarBlock = styled.div`\r\n  width: 20%;\r\n  padding: 0;\r\n  margin: 0;\r\n  height: 100%;\r\n  background: #cc5de8;\r\n`;\r\n\r\nexport const SideBarItem = styled.div`\r\n  width: 100%;\r\n  height: 48px;\r\n  line-height: 48px;\r\n  text-align: center;\r\n  border-bottom: 1px solid white;\r\n`;\r\n\r\nexport const SideLink = styled(Link)`\r\n  width: 100%;\r\n  text-decoration: none;\r\n  color: white;\r\n  background: gray;\r\n`;\r\n","import React, { memo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Styles from \"./style\";\r\n\r\nconst index = ({ contentList }) => {\r\n  return (\r\n    <Styles.SideBarBlock>\r\n      {contentList.map(item => (\r\n        <Styles.SideLink to={`/${item === \"home\" ? \"\" : item}`}>\r\n          <Styles.SideBarItem key={item}>{item}</Styles.SideBarItem>\r\n        </Styles.SideLink>\r\n      ))}\r\n    </Styles.SideBarBlock>\r\n  );\r\n};\r\n\r\nexport default memo(index);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const SideBarBlock = styled.div`\r\n  width: 35%;\r\n  height: 100%;\r\n  background: #e599f7;\r\n`;\r\n\r\nexport const SideBarItem = styled.div`\r\n  width: 100%;\r\n  border-radius: 15px;\r\n  margin-bottom: 45px;\r\n  height: ${props => props.height};\r\n  color: white;\r\n  text-align: center;\r\n`;\r\n\r\nexport const SideLink = styled(Link)`\r\n  width: 100%;\r\n  text-decoration: none;\r\n  color: white;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ChatBlock = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  padding: 1px;\r\n  /* border: 1px solid black; */\r\n  border-radius: 25px;\r\n  background: skyblue;\r\n  padding: 0;\r\n  margin: 0;\r\n`;\r\n\r\nexport const ChatMessageBlock = styled.div`\r\n  height: 80%;\r\n  width: 100%;\r\n  border-top-left-radius: 25px;\r\n  border-top-right-radius: 25px;\r\n  margin: 0;\r\n  background: #dee2e6;\r\n  color: black;\r\n`;\r\n\r\nexport const ChatMessageInput = styled.input`\r\n  width: 100%;\r\n  height: 10%;\r\n  margin: 0;\r\n  outline: none;\r\n  border: none;\r\n  background: #f8f9fa;\r\n  padding-left: 12px;\r\n  &::placeholder {\r\n    color: #adb5bd;\r\n  }\r\n`;\r\n\r\nexport const ChatMessageButton = styled.button`\r\n  width: 100%;\r\n  height: 10%;\r\n  background: #4263eb;\r\n  border: none;\r\n  color: white;\r\n  outline: none;\r\n  border: none;\r\n  border-bottom-left-radius: 25px;\r\n  border-bottom-right-radius: 25px;\r\n  &:hover {\r\n    background: #5c7cfa;\r\n  }\r\n  &:active {\r\n    background: #91a7ff;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport * as Styles from \"./style\";\r\n\r\nconst index = () => {\r\n  return (\r\n    <Styles.ChatBlock>\r\n      <Styles.ChatMessageBlock>asdas</Styles.ChatMessageBlock>\r\n      <Styles.ChatMessageInput placeholder=\"내용을 입력하세요.\" />\r\n      <Styles.ChatMessageButton>보내기</Styles.ChatMessageButton>\r\n    </Styles.ChatBlock>\r\n  );\r\n};\r\n\r\nexport default index;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const LoginBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  padding: 12px;\r\n  background: #ced4da;\r\n  border-radius: 25px;\r\n  height: 100%;\r\n`;\r\n\r\nexport const LoginInput = styled.input`\r\n  width: 100%;\r\n  outline: none;\r\n  border: none;\r\n  padding-left: 1rem;\r\n  font-size: 1rem;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n  background: #e9ecef;\r\n`;\r\n\r\nexport const LoginButton = styled.button`\r\n  float: right;\r\n  margin-left: 2px;\r\n  width: 50%;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: white;\r\n  background: #4263eb;\r\n  &:hover {\r\n    background: #5c7cfa;\r\n  }\r\n  &:active {\r\n    background: #91a7ff;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport * as Styles from \"./style\";\r\n\r\nconst index = () => {\r\n  return (\r\n    <Styles.LoginBlock>\r\n      <Styles.LoginInput />\r\n      <Styles.LoginInput />\r\n      <div style={{ marginTop: \"3px\", width: \"100%\", display: \"flex\" }}>\r\n        <Styles.LoginButton>회원가입</Styles.LoginButton>\r\n        <Styles.LoginButton>로그인</Styles.LoginButton>\r\n      </div>\r\n    </Styles.LoginBlock>\r\n  );\r\n};\r\n\r\nexport default index;\r\n","import React, { memo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Styles from \"./style\";\r\nimport Chatting from \"../chatting\";\r\nimport Login from \"../login\";\r\n\r\nconst index = ({ contentList }) => {\r\n  return (\r\n    <Styles.SideBarBlock>\r\n      <Styles.SideBarItem height=\"10%\">\r\n        <Login />\r\n      </Styles.SideBarItem>\r\n      <Styles.SideBarItem height=\"80%\">\r\n        <Chatting />\r\n      </Styles.SideBarItem>\r\n    </Styles.SideBarBlock>\r\n  );\r\n};\r\n\r\nexport default memo(index);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const FooterBlock = styled.div`\r\n  width: 100%;\r\n  height: 5vh;\r\n  background: gray;\r\n  position: fixed;\r\n  bottom: 0;\r\n  color: white;\r\n`;\r\n","import React from \"react\";\r\nimport * as Styles from \"./style\";\r\n\r\nconst index = () => {\r\n  return (\r\n    <Styles.FooterBlock>\r\n      Copyright &copy; 2019-<b>JSor(Jang GeonIl)</b> All right reserved.\r\n    </Styles.FooterBlock>\r\n  );\r\n};\r\n\r\nexport default index;\r\n","import React, { memo } from \"react\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div style={{ width: \"100%\", height: \"100%\" }}>\r\n      <div style={{ height: \"20%\", background: \"blue\" }}>1</div>\r\n      <div style={{ height: \"40%\", background: \"green\" }}>2</div>\r\n      <div style={{ height: \"40%\", background: \"red\" }}>3</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Home);\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return <div style={{ width: \"100%\" }}>About</div>;\r\n};\r\n\r\nexport default About;\r\n","import React, { memo, useEffect, useState } from \"react\";\nimport { Route, Link } from \"react-router-dom\";\nimport TopBar from \"./components/topbar\";\nimport LeftSideBar from \"./components/leftbar\";\nimport RightSideBar from \"./components/rightbar\";\nimport Footer from \"./components/footer\";\nimport Home from \"./Home\";\nimport About from \"./About\";\n\nfunction App() {\n  const [column, setColumn] = useState(false);\n  const _onReSizeEvent = () => {\n    if (document.body.offsetWidth < 520 && document.body.offsetWidth > 490) {\n      setColumn(true);\n    } else if (document.body.offsetWidth <= 490) {\n      setColumn(true);\n    } else {\n      setColumn(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", _onReSizeEvent);\n    return () => {\n      window.removeEventListener(\"resize\", _onReSizeEvent);\n    };\n  }, []);\n  return (\n    <>\n      <TopBar title={\"Glog\"} />\n      <div\n        style={{\n          position: \"fixed\",\n          top: \"80px\",\n          display: \"flex\",\n          height: \"87%\",\n          width: \"100%\"\n        }}\n      >\n        <LeftSideBar contentList={[\"home\", \"about\"]} />\n        <div style={{ width: \"100%\" }}>\n          <Route path=\"/\" component={Home} exact key=\"home\" />\n          <Route path=\"/about\" component={About} key=\"about\" />\n        </div>\n        {!column && <RightSideBar />}\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default memo(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}